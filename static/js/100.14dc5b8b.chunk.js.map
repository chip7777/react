{"version":3,"file":"static/js/100.14dc5b8b.chunk.js","mappings":"iKAYaA,GAAgCC,EAAAA,EAAAA,OAAK,gBAAGC,EAAH,EAAGA,QAAH,OAChD,0BACGA,EAAQC,OADX,KACqBD,EAAQE,WCPlBC,EAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC/C,wBACGA,EAASC,KAAI,SAACL,EAASM,GAAV,OACZ,SAACR,EAAD,CAAaE,QAASA,GAAcM,S,mBCF7BC,EAA0B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAClD,OACE,SAAC,IAAD,CAAUC,QAAQ,WAAWC,KAAK,SAASH,SAAUA,EAArD,SACGC,K,UCHMG,EAAwB,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YAAab,EAAa,EAAbA,QAEhD,OAAQ,SAAC,IAAD,CAASW,KAAK,OAAOG,WAAS,EAACJ,QAAQ,WAAWK,QAASF,EAAaG,MAAUhB,K,wCCCjFiB,GAAWlB,EAAAA,EAAAA,OAAK,WAC3B,OAA0BmB,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcG,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,GACJC,EAAAA,EAAAA,MAmBF,OACE,kBAAMC,SAda,SAACC,GAAyC,IAAD,EAC5DA,EAAEC,iBACEN,GAAUJ,GACZM,GACEK,EAAAA,EAAAA,IAAoB,CAAEP,OAAAA,EACpBpB,QAAS,CAAEC,OAAQ2B,EAAAA,EAAAA,KAAa1B,KAAMc,MAI5CG,EAAS,IACT,UAAAU,SAASC,cAAc,gBAAvB,SAAiCC,SAIjC,WACE,SAACnB,EAAD,CAAOC,YAnBS,SAACmB,GACnBb,EAASa,EAAGC,OAAOjB,QAkBgBhB,QAASgB,KAC1C,SAACT,EAAD,CAAQE,KAAK,OAAOD,UAAWQ,EAAMkB,e,oBC7B9BC,EAAY,WACvB,IAAQf,GAAWC,EAAAA,EAAAA,MAAXD,OAEFgB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GAGzB,OAFgBD,EAAAA,EAAAA,IAAYE,EAAAA,GAEdC,MAAK,SAACC,GAAD,OAAUA,EAAKhC,OAASW,MAK1C,iCACE,SAACsB,EAAA,EAAD,KACA,SAACvC,EAAD,CAAaC,SAAUgB,EAASgB,EAAMhB,GAAU,MAChD,SAACH,EAAD,QAPK,SAAC,KAAD,CAAU0B,SAAO,EAACC,GAAG","sources":["components/MessageList/MessageItem.tsx","components/MessageList/MessageList.tsx","components/Forms/Button/Button.tsx","components/Forms/Input/Input.tsx","components/Forms/Form/Form.tsx","pages/Chats.tsx"],"sourcesContent":["import React, { FC, memo } from 'react';\n\nexport interface Message {\n  id: string;\n  author: string;\n  text: string;\n}\n\ninterface MessageProps {\n  message: Message;\n}\n\nexport const MessageItem: FC<MessageProps> = memo(({ message }) => (\n  <li>\n    {message.author}: {message.text}\n  </li>\n));","import React, { FC } from 'react';\nimport { MessageItem, Message } from './MessageItem';\n\ninterface MessageListProps {\n  messages: Message[];\n}\n\nexport const MessageList: FC<MessageListProps> = ({ messages }) => (\n  <ul>\n    {messages.map((message, idx) => (\n      <MessageItem message={message} key={idx} />\n    ))}\n  </ul>\n);","import React, { FC } from 'react';\nimport ButtonUA from '@mui/material/Button';\n\ninterface ButtonProps {\n  disabled: boolean;\n  name: string;\n}\n\nexport const Button: FC<ButtonProps> = ({ disabled, name }) => {\n  return (\n    <ButtonUA variant=\"outlined\" type=\"submit\" disabled={disabled} >\n      {name}\n    </ButtonUA>\n  );\n};\n","import React, { FC } from 'react';\nimport InputUA from '@mui/material/TextField';\n\ninterface InputProps{\n    handleInput: (ev:React.ChangeEvent<HTMLInputElement>) => void;\n    message : string;\n};\n\nexport const Input: FC<InputProps> = ({handleInput, message}) => {\n\n    return (<InputUA type='text' autoFocus variant='standard' onInput={handleInput} value = { message } />);\n}\n","import React, { useState, FC, memo } from 'react';\nimport { Button } from '../Button/Button';\nimport { Input } from '../Input/Input';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addMessageWithReply } from '../../../store/chats/slice';\nimport { AUTHOR } from '../../../constants';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ChatState } from '../../../store/chats/slice';\nimport { AddMessage } from '../../../store/chats/types';\n\nexport const Form: FC = memo(() => {\n  const [value, setValue] = useState('');\n  const { chatId } = useParams();\n\n  const dispatch =\n    useDispatch<ThunkDispatch<ChatState, void, ReturnType<AddMessage>>>();\n\n  const handleInput = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (chatId && value) {\n      dispatch(\n        addMessageWithReply({ chatId, \n          message: { author: AUTHOR.USER, text: value }\n        }),\n      );\n    }\n    setValue('');\n    document.querySelector('input')?.focus();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input handleInput={handleInput} message={value} />\n      <Button name=\"Send\" disabled={!value.length} />\n    </form>\n  );\n});\n","import React, { FC } from 'react';\n\nimport { MessageList } from '../components/MessageList/MessageList';\nimport { Form } from '../components/Forms/Form';\nimport { ChatList } from '../components/ChatList';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectChatList, selectChats } from '../store/chats/selectors';\n\nexport const Chats: FC = () => {\n  const { chatId } = useParams();\n\n  const chats = useSelector(selectChats);\n  const chatList = useSelector(selectChatList);\n\n   if (!chatList.find((chat) => chat.name === chatId)) {\n    return <Navigate replace to=\"/chats\" />;\n  }\n\n  return (\n    <>\n      <ChatList />\n      <MessageList messages={chatId ? chats[chatId] : []} />\n      <Form />\n    </>\n  );\n};\n"],"names":["MessageItem","memo","message","author","text","MessageList","messages","map","idx","Button","disabled","name","variant","type","Input","handleInput","autoFocus","onInput","value","Form","useState","setValue","chatId","useParams","dispatch","useDispatch","onSubmit","e","preventDefault","addMessageWithReply","AUTHOR","document","querySelector","focus","ev","target","length","Chats","chats","useSelector","selectChats","selectChatList","find","chat","ChatList","replace","to"],"sourceRoot":""}